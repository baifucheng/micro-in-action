
eureka:
  instance:
    # 注册服务IP，而不是服务器名称
    prefer-ip-address: true
  client:
    # 向eureka注册服务
    register-with-eureka: true
    # 拉取注册表的本地副本
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

security:
  oauth2:
    resource:
      user-info-uri: http://localhost:8901/user
#      token-info-uri: http://localhost:8901/oauth/check_token

spring:
  cloud:
    stream:
      # 将使用kafka作为消息总线
      kafka:
        binder:
          # 告诉kafka的网络位置（旧版本的spring cloud好像还需要配置zkNode，Greenwich版本貌似不需要）
          brokers: 192.168.1.110
          auto-create-topics: true
      # TODO binders 和 bindings有什么区别，为什么binders不能发布消息
      # bindings是用于服务将消息发布到spring cloud stream消息代理
      bindings:
        # output是通道的名称，映射到EnableBinding()中的设置
        output:
          # 写入消息的消息队列名称（或主题）
          destination: orgChangeTopic
          content-type: application/json

  zipkin:
    base-url: http://localhost:9411
    sender:
      type: web
  sleuth:
    sampler:
      probability: 1

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.baifc: DEBUG